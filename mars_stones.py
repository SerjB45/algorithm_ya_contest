# Камни с Марса
# При отправке марсианской миссии множество научных лабораторий и музеев
# сделали заказы на доставку образцов марсианских горных пород.
# В каждом заказе обозначен минимальный вес требуемого образца: заказчик готов
# получить образец указанного веса или тяжелее, но никак не меньше.
# Марсианские булыжники были доставлены на Землю, но ни их количество,
# ни вес не соответствуют заказам в точности


# задача: написать программу, которая распределит образцы между заказчиками
# оптимальным образом — так, чтобы выполнить требования максимального числа
# заказчиков. Требование заказчика считается выполненным, если он получит
# образец, вес которого равен заказанному или превышает заказанный вес.
# Программа должна вернуть число заказчиков, которые получили образцы,
# соответствующие их требованиям.

# Формат ввода
# В первой строке записано число n — количество заказов от музеев и
# лабораторий. Это количество не превышает 10 000.

# Во второй строке — n чисел, разделённых пробелом. Каждое число — это
# минимальный вес образца, который требуется заказчику. Это натуральные
# числа, не превосходящие 1000.

# В третьей строке записано число m — количество образцов, доставленных с
# Марса. Это количество не превышает 10 000.

# В четвёртой строке — m чисел: это вес каждого из доставленных образцов;
# значения в этой строке не превышают 1000.

# Формат вывода
# Вывести число — количество заказчиков, требования которых удовлетворены.

# 1 рабочее решение, но возможно не самое лучшее
def main():
    number_customers = int(input())  # noqa: F841
    orders = [int(i) for i in input().split()]

    number_stones = int(input())  # noqa: F841
    package = [int(i) for i in input().split()]

    print(calc_number_customers(orders, package))


def calc_number_customers(orders, package):
    min_value = min(orders)
    max_value = max(package)

    orders = sorted([i for i in orders if i <= max_value])
    package = sorted([i for i in package if i >= min_value])

    # num_package = len(package)
    customer = 0
    for i in range(len(package)):
        try:
            if package[i] >= orders[customer]:
                customer += 1
        except IndexError:
            break

    return customer


if __name__ == '__main__':
    main()
